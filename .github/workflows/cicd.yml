# 1 워크플로의 이름 지정
name: CI

# 2 워크플로가 시작될 조건 지정. main 브랜치에 push 될때 실행됨
on:
  push:
    branches: [ "main" ]

# 하나의 workflow는 1개 이상의 Job으로 구성됨. 여러 job은 병렬적으로 수행됨.
jobs:
  # 빌드 이름
  build:
    runs-on: ubuntu-latest # 3 실행 환경 지정
    #4 실행스텝지정. 특정 작업을 수행하는 가장 작은 단위. Job은 step으로 구성되어 있다.
    steps:
      - name: Hello world 찍기
        run : echo "Hello world"

      - name : 여러 명령어 문장 작성
        run : |
          echo "Hello"
          echo "world!!"

      - name : Github Actions 자체에 저장되어 있는 변수 사용하기
        run: |
          echo $GITHUB_SHA
          echo $GITHUB_REPOSITORY
          
      - name : 깃헙 액션 환경변수 테스트
        run : | 
          echo ${{ secrets.TEST_VAR }}

#      - uses: actions/checkout@v3
#
#      - uses: actions/setup-java@v3
#        with:
#          distribution: 'corretto'
#          java-version: '17'
#
#      - name: Grant execute permission for gradlew
#        run: chmod +x gradlew
#
#      - name: Build with Gradle
#        run: ./gradlew clean build


#      #2 현재시간가져오기
#      - name: Get current time
#        uses: josStorer/get-current-time@v2.0.2
#        id: current-time
#        with:
#          format: YYYY-MM-DDTHH-mm-ss
#          utcOffset: "+09:00"
#
#      # 3 배포용 패키지 경로 저장
#      - name: Set artifact
#        run: echo "artifact=$(ls ./build/libs)" >> $GITHUB_ENV
#
#      # 4 빈스토크 배포
#      - name: Beanstalk Deploy
#      uses: einaregilsson/beanstalk-deploy@v20
#      with:
#        aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
#        aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#        application_name: springboot-developer
#        environment_name: springboot-developer-env
#        version_label: github-action-${{steps.current-time.outputs.formattedTime}} region: ap-northeast-2
#        deployment_package: ./build/libs/${{env.artifact}}